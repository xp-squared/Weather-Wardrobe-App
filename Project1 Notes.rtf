{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red229\green168\blue255;\red1\green25\blue64;\red255\green255\blue255;
\red200\green241\blue153;\red174\green208\blue255;\red139\green255\blue255;\red255\green236\blue157;\red254\green185\blue125;
\red95\green112\blue168;\red253\green136\blue147;}
{\*\expandedcolortbl;;\cssrgb\c92157\c73333\c100000;\cssrgb\c0\c14118\c31765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c81961\c94510\c66275;\cssrgb\c73333\c85490\c100000;\cssrgb\c60000\c100000\c100000;\cssrgb\c100000\c93333\c67843;\cssrgb\c100000\c77255\c56078;
\cssrgb\c44706\c52157\c71765;\cssrgb\c100000\c61569\c64314;}
\margl1440\margr1440\vieww11440\viewh5000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -If flutter will not run on IOS simulator you need to make sure that the folder that the flutter project is on is not a folder that is synced with iCloud, I disabled this feature on my MacBook {\field{\*\fldinst{HYPERLINK "https://stackoverflow.com/questions/77207505/error-xcode-target-debug-unpack-ios-failed-exception-failed-to-codesign-in"}}{\fldrslt https://stackoverflow.com/questions/77207505/error-xcode-target-debug-unpack-ios-failed-exception-failed-to-codesign-in}}\
- flutter run from terminal in vs code\
- flutter doctor to check on summary of all things needed\
- how to video followed {\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=343PpFsTDvM"}}{\fldrslt https://www.youtube.com/watch?v=343PpFsTDvM}}\
- update homebrew often\
- open -a simulator from terminal to run shit or just open using command-shift-p new emulator\
- Flutter outline video #13 has some really good examples of moving widgets and containers down and other cool stuff just to know, click the lightbulb icon sometimes to see what it might say has cool features like add padding\
\
Next Steps:\
- did not do android studio stuff yet, will do in future \
-Weather Api: openweathermap Api\
\
\
Old code before restarting\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 'package:flutter/material.dart'\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 void\cf4 \strokec4  \cf6 \strokec6 main\cf4 \strokec4 () \cf7 \strokec7 =>\cf4 \strokec4  \cf6 \strokec6 runApp\cf4 \strokec4 (\cf8 \strokec8 MaterialApp\cf4 \strokec4 ( \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 home\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 MyHomePage\cf4 \strokec4 (),\cb1 \
\cb3   )); \cf10 \strokec10 // root of the widget tree: MyApp, this begins the whole process of running\cf4 \cb1 \strokec4 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 class\cf4 \strokec4  \cf8 \strokec8 MyHomePage\cf4 \strokec4  \cf2 \strokec2 extends\cf4 \strokec4  \cf8 \strokec8 StatefulWidget\cf4 \strokec4  \{  \cf11 \strokec11 @override\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 State\cf4 \strokec4 <\cf8 \strokec8 MyHomePage\cf4 \strokec4 > \cf6 \strokec6 createState\cf4 \strokec4 () \cf7 \strokec7 =>\cf4 \strokec4  \cf8 \strokec8 _MyHomePageState\cf4 \strokec4 ();\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 class\cf4 \strokec4  \cf8 \strokec8 _MyHomePageState\cf4 \strokec4  \cf2 \strokec2 extends\cf4 \strokec4  \cf8 \strokec8 State\cf4 \strokec4 <\cf8 \strokec8 MyHomePage\cf4 \strokec4 > \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3  \cf10 \strokec10 // extending staeless widget class in flutter\cf4 \cb1 \strokec4 \
\cb3   \cf11 \strokec11 @override\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 Widget\cf4 \strokec4  \cf6 \strokec6 build\cf4 \strokec4 (\cf8 \strokec8 BuildContext\cf4 \strokec4  \cf9 \strokec9 context\cf4 \strokec4 ) \{ \cf10 \strokec10 // this build function builds up the widget tree\cf4 \cb1 \strokec4 \
\cb3      \cf10 \strokec10 // beginning to build the scaffold (top level container), wrapper to layer widgets like buttons and body text\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf8 \strokec8 Scaffold\cf4 \strokec4  ( \cb1 \
\cb3       \cf9 \strokec9 backgroundColor\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Color\cf4 \strokec4 .\cf6 \strokec6 fromARGB\cf4 \strokec4 (\cf9 \strokec9 255\cf4 \strokec4 , \cf9 \strokec9 128\cf4 \strokec4 , \cf9 \strokec9 128\cf4 \strokec4 , \cf9 \strokec9 128\cf4 \strokec4 ),\cb1 \
\cb3       \cf9 \strokec9 appBar\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 AppBar\cf4 \strokec4  (\cb1 \
\cb3         \cf9 \strokec9 title\cf7 \strokec7 :\cf4 \strokec4  \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 Text\cf4 \strokec4 (\cb1 \
\cb3           \cf5 \strokec5 "Current Location"\cf4 \strokec4 ,\cb1 \
\cb3           \cf9 \strokec9 style\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 TextStyle\cf4 \strokec4 (\cb1 \
\cb3             \cf9 \strokec9 color\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Color\cf4 \strokec4 .\cf6 \strokec6 fromARGB\cf4 \strokec4 (\cf9 \strokec9 255\cf4 \strokec4 , \cf9 \strokec9 255\cf4 \strokec4 , \cf9 \strokec9 255\cf4 \strokec4 , \cf9 \strokec9 255\cf4 \strokec4 ),\cb1 \
\cb3             \cf9 \strokec9 fontSize\cf7 \strokec7 :\cf4 \strokec4  \cf9 \strokec9 30\cf4 \strokec4 , \cb1 \
\cb3             \cf9 \strokec9 fontWeight\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 FontWeight\cf4 \strokec4 .\cf11 \strokec11 w500\cf4 \strokec4 , \cf10 \strokec10 // boldness\cf4 \cb1 \strokec4 \
\cb3             \cf9 \strokec9 fontFamily\cf7 \strokec7 :\cf4 \strokec4  \cf5 \strokec5 'Gloock'\cf4 \cb1 \strokec4 \
\cb3           ),\cb1 \
\cb3         ),\cb1 \
\cb3         \cf9 \strokec9 backgroundColor\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Colors\cf4 \strokec4 .\cf11 \strokec11 grey\cf4 \strokec4 [\cf9 \strokec9 900\cf4 \strokec4 ],\cb1 \
\cb3         \cf9 \strokec9 bottom\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 PreferredSize\cf4 \strokec4 (\cb1 \
\cb3           \cf9 \strokec9 preferredSize\cf7 \strokec7 :\cf4 \strokec4  \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 Size\cf4 \strokec4 .\cf6 \strokec6 fromHeight\cf4 \strokec4 (\cf9 \strokec9 30.0\cf4 \strokec4 ),\cb1 \
\cb3         \cf9 \strokec9 child\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Container\cf4 \strokec4 (\cb1 \
\cb3           \cf9 \strokec9 height\cf7 \strokec7 :\cf4 \strokec4  \cf9 \strokec9 3.0\cf4 \strokec4 , \cf10 \strokec10 // thickness of black line\cf4 \cb1 \strokec4 \
\cb3           \cf9 \strokec9 color\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Colors\cf4 \strokec4 .\cf11 \strokec11 white\cf4 \strokec4 .\cf6 \strokec6 withOpacity\cf4 \strokec4 (\cf9 \strokec9 .5\cf4 \strokec4 ), \cf10 \strokec10 // opacity of the thin black line\cf4 \cb1 \strokec4 \
\cb3           ),\cb1 \
\cb3           ),\cb1 \
\cb3         ),\cb1 \
\cb3       \cf9 \strokec9 body\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Row\cf4 \strokec4 (\cb1 \
\cb3         \cf9 \strokec9 children\cf7 \strokec7 :\cf4 \strokec4  \cf7 \strokec7 <\cf8 \strokec8 Widget\cf7 \strokec7 >\cf4 \strokec4 [\cb1 \
\cb3           \cf8 \strokec8 Expanded\cf4 \strokec4 (\cb1 \
\cb3             \cf9 \strokec9 child\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Container\cf4 \strokec4 (\cb1 \
\cb3               \cf9 \strokec9 padding\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 EdgeInsets\cf4 \strokec4 .\cf6 \strokec6 all\cf4 \strokec4 (\cf9 \strokec9 30.0\cf4 \strokec4 ),\cb1 \
\cb3               \cf9 \strokec9 color\cf7 \strokec7 :\cf4 \strokec4  \cf2 \strokec2 const\cf4 \strokec4  \cf8 \strokec8 Color\cf4 \strokec4 .\cf6 \strokec6 fromARGB\cf4 \strokec4 (\cf9 \strokec9 255\cf4 \strokec4 , \cf9 \strokec9 45\cf4 \strokec4 , \cf9 \strokec9 141\cf4 \strokec4 , \cf9 \strokec9 153\cf4 \strokec4 ),\cb1 \
\cb3               \cf9 \strokec9 child\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Image\cf4 \strokec4 (\cb1 \
\cb3                 \cf9 \strokec9 image\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 AssetImage\cf4 \strokec4 (\cf5 \strokec5 'assets/weather-icons-set/CLOUDS/png clouds/001lighticons-94.png'\cf4 \strokec4 ),\cb1 \
\cb3               ),\cb1 \
\cb3             ),\cb1 \
\cb3           ),\cb1 \
\cb3           \cf8 \strokec8 Expanded\cf4 \strokec4 (\cb1 \
\cb3             \cf9 \strokec9 child\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Container\cf4 \strokec4 (\cb1 \
\cb3               \cf9 \strokec9 padding\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 EdgeInsets\cf4 \strokec4 .\cf6 \strokec6 all\cf4 \strokec4 (\cf9 \strokec9 30.0\cf4 \strokec4 ),\cb1 \
\cb3               \cf9 \strokec9 color\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Color\cf4 \strokec4 .\cf6 \strokec6 fromARGB\cf4 \strokec4 (\cf9 \strokec9 255\cf4 \strokec4 , \cf9 \strokec9 4\cf4 \strokec4 , \cf9 \strokec9 92\cf4 \strokec4 , \cf9 \strokec9 95\cf4 \strokec4 ),\cb1 \
\cb3               \cf9 \strokec9 child\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 Image\cf4 \strokec4 (\cb1 \
\cb3                 \cf9 \strokec9 image\cf7 \strokec7 :\cf4 \strokec4  \cf8 \strokec8 AssetImage\cf4 \strokec4 (\cf5 \strokec5 'assets/weather-icons-set/CLOUDS/png clouds/001lighticons-01.png'\cf4 \strokec4 ),\cb1 \
\cb3               )\cb1 \
\cb3             )\cb1 \
\cb3           )\cb1 \
\cb3         ]\cb1 \
\cb3       )\cb1 \
\cb3     );\cb1 \
\cb3     \cf10 \strokec10 // end of return statement always put semicolon!\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
}